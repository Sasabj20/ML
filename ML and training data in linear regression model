import pandas as pd
import statsmodels.formula.api as sm
import numpy as np 
from sklearn.metrics import r2_score
df = pd.read_excel('E:Tabela29IIII0000.xlsx')
print(df)
x = df.loc[:,['Bonuses','Contribution']]
y = df.Salary
from sklearn.linear_model import LinearRegression
# Note the difference in argument order
print(x)
print(y)
from sklearn import preprocessing
from sklearn.model_selection import train_test_split


from sklearn import preprocessing
from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split (x, y, test_size = 0.25, random_state = 42)
print(x_train)
print(x_test)

model1 = LinearRegression().fit(x_train,y_train) 

y_new = model1.predict(x_train) 


print(model1.intercept_)
print(model1.coef_)
print('Predicted values of trainig data:', y_new)
model1.score(x_test,y_test)
model2 = LinearRegression().fit(x_test, y_test)
print(model2.intercept_)
print(model2.coef_)
y_new2 = model2.predict(x_test)
print('Predicted values of testing data:', y_new2)
r2 = r2_score(y_test, y_new2)
print('Acuracy od model is:', r2)



ID Department Bonuses Contribution Salary Special Bonuses
0 110 20 100 19 1100 450
1 111 28 600 22 1900 617
2 112 29 800 25 2000 647
3 113 57 1400 29 3200 860
4 114 25 200 13 1300 460
5 115 29 800 18 1700 545
6 116 35 1000 29 2300 742
7 117 61 1600 38 3600 895
8 118 58 1500 35 3400 880
9 119 24 400 14 1450 480
10 120 28 600 16 1600 520
11 121 31 920 26 2200 722
12 122 37 1100 38 2600 800
13 123 47 1300 41 2800 820
14 124 26 500 15 1520 500
15 145 26 550 17 2000 650
16 148 58 620 19 2200 800
17 149 56 580 17 2200 740
18 121 26 550 16 2000 680
    Bonuses Contribution
0 100 19
1 600 22
2 800 25
3 1400 29
4 200 13
5 800 18
6 1000 29
7 1600 38
8 1500 35
9 400 14
10 600 16
11 920 26
12 1100 38
13 1300 41
14 500 15
15 550 17
16 620 19
17 580 17
18 550 16
0 1100
1 1900
2 2000
3 3200
4 1300
5 1700
6 2300
7 3600
8 3400
9 1450
10 1600
11 2200
12 2600
13 2800
14 in 1520
15 in 2000
16 2200
17 2200
18 in 2000
Name: Salary, dtype: int64
    Bonuses Contribution
16 620 19
3 1400 29
13 1300 41
15 550 17
17 580 17
2 800 25
9 400 14
18 550 16
4 200 13
12 1100 38
7 1600 38
10 600 16
14 500 15
6 1000 29
    Bonuses Contribution
0 100 19
5 800 18
11 920 26
1 600 22
8 1500 35
1058.3705269807094
[ 1.85353747 -14.69971559]
Predicted values ​​of training data: [1928.26915974 3227.03122745 2865.28089369 1827.9209683 1883.52709228
 2173.70761009 1593.98949515 1842.62068389 1237.9817175 2538.67254723
 3465.44128034 1935.2975572 1764.64352617 2485.61624096]
-108.25961730401787
[ 0.91146947 60.56948128]
Predicted values ​​of testing data: [1133.70747426 1711.16662389 2305.09881085 1771.15065446 3378.87643654]
Accuracy of the model is: 0.9898495829422128
